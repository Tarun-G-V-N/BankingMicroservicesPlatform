server:
  port: 8080
spring:
  application:
    name: "accountservice"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3306/accountsDB
    username: root
    password: root
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  config:
    import: "optional:configserver:http://localhost:8071"
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"
    connection-timeout: 10s
  cloud:
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
      group:
        readiness:
          include: "*"
        liveness:
          include: "*"
  metrics:
    tags:
      application: ${spring.application.name}
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
info:
  app:
    name: "accountservice"
    description: "smart bank accounts application"
    version: "1.0.0"

logging:
  level:
    com:
      smartbank:
        accountservice: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    console: "%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n"
axon:
  eventhandling:
    processors:
      account-group:
        mode: subscribing
  axonserver:
    servers: localhost:8124